apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: deploy-aap-instance
spec:
  workspaces:
    - name: working-directory
    - name: ssh-creds
    - name: aap-manifest-directory
  params:
    - name: argocd-git-url
      type: string
      description: ArgoCD git repository URL
      default: git@github.com:ahussey-redhat/aap-as-a-service-gitops.git
    - name: serviceNowIncidentID
      type: string
      description: The ServiceNow ticket ID used for provisioning the AAP instance
    - name: branchName
      type: string
      description: Name of user's Branch EG 'Enterprise IT'
    - name: teamName
      type: string
      description: Name of user's Team EG 'Kubernetes'
    - name: maxHosts
      type: string
      description: The maximum number of hosts this AAP instance can manage
      default: "20"
    - name: owner
      type: string
      description: Owner of the SericeNow request/AAP instance
    - name: instanceID
      type: string
      description: Iterative number associated with this AAP instance
  tasks:
    - name: update-servicenow-ticket-init
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: initiating
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
    - name: clone-argocd-repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.argocd-git-url)"
      workspaces:
        - name: output
          workspace: working-directory
        - name: ssh-directory
          workspace: ssh-creds
      runAfter:
        - update-servicenow-ticket-init
    - name: update-servicenow-ticket-deploy
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: preparing
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - clone-argocd-repository
    - name: prepare-aap-instance
      taskRef:
        name: prepare-aap-instance
      params:
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - update-servicenow-ticket-deploy
      workspaces:
        - name: output
          workspace: working-directory
    - name: customise-aap-instance
      taskRef:
        name: customise-aap-instance
      params:
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
        - name: isAlreadyDefined
          value: "$(tasks.prepare-aap-instance.results.instance-already-defined)"
        - name: appUrl
          value: "$(tasks.prepare-aap-instance.results.app-url)"
      runAfter:
        - prepare-aap-instance
      workspaces:
        - name: output
          workspace: working-directory
        - name: ssh-directory
          workspace: ssh-creds
    - name: deploy-aap-instance
      taskRef:
        name: deploy-aap-instance
      params:
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
        - name: isAlreadyDefined
          value: "$(tasks.prepare-aap-instance.results.instance-already-defined)"
      runAfter:
        - customise-aap-instance
      workspaces:
        - name: output
          workspace: working-directory
    - name: update-servicenow-ticket-deployed
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: deployed
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - deploy-aap-instance
    - name: conduct-day1-ops
      taskRef:
        name: conduct-day1-ops
      params:
        - name: maxHosts
          value: "$(params.maxHosts)"
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
        - name: isAlreadyDefined
          value: "$(tasks.prepare-aap-instance.results.instance-already-defined)"
        - name: adminPassword
          value: "$(tasks.deploy-aap-instance.results.controller-admin-password)"
        - name: appUrl
          value: "$(tasks.prepare-aap-instance.results.app-url)"
      runAfter:
        - update-servicenow-ticket-deployed
      workspaces:
        - name: output
          workspace: working-directory
        - name: aap-manifest
          workspace: aap-manifest-directory
    - name: update-servicenow-ticket-day1-complete
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: day1
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - conduct-day1-ops
    - name: conduct-day2-ops
      taskRef:
        name: conduct-day2-ops
      params:
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
        - name: isAlreadyDefined
          value: "$(tasks.prepare-aap-instance.results.instance-already-defined)"
        - name: hubAdminPassword
          value: "$(tasks.deploy-aap-instance.results.hub-admin-password)"
        - name: appUrl
          value: "$(tasks.prepare-aap-instance.results.app-url)"
      runAfter:
        - update-servicenow-ticket-deployed
    - name: update-servicenow-ticket-day2-complete
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: day2
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - conduct-day2-ops
    - name: update-servicenow-ticket-complete
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: |
            AAP Controller
              URL: https://$(tasks.deploy-aap-instance.results.controller-url)
            AAP Private Automation Hub
              URL: https://$(tasks.deploy-aap-instance.results.hub-url)
              Username: admin
              Password: $(tasks.deploy-aap-instance.results.hub-admin-password)
            AAP Event Driven Ansible
              URL: https://$(tasks.deploy-aap-instance.results.eda-url)
              Username: admin
              Password: $(tasks.deploy-aap-instance.results.eda-admin-password)
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      runAfter:
        - update-servicenow-ticket-day1-complete
        - update-servicenow-ticket-day2-complete
  finally:
    - name: update-servicenow-ticket-failed
      taskRef:
        name: update-servicenow-ticket
      params:
        - name: message
          value: failed
        - name: serviceNowIncidentID
          value: "$(params.serviceNowIncidentID)"
        - name: owner
          value: "$(params.owner)"
        - name: branchName
          value: "$(params.branchName)"
        - name: teamName
          value: "$(params.teamName)"
        - name: instanceID
          value: "$(params.instanceID)"
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
